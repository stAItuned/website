name: Deploy on content update

on:
  repository_dispatch:
    types: [content-updated]
  workflow_dispatch:
  push:
    branches: [main]

concurrency:
  group: deploy-production
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.WEBSITE_DISPATCH_TOKEN }}

      - name: Update submodule to latest (shallow)
        run: |
          git -c protocol.version=2 submodule update --init --recursive --depth 1
          git -c protocol.version=2 submodule update --remote --recursive --depth 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: Install deps
        run: npm ci

      - name: Cache Next build artifacts
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: next-${{ hashFiles('package-lock.json') }}-${{ hashFiles('content/**') }}
          restore-keys: |
            next-${{ hashFiles('package-lock.json') }}-

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Enable Firebase Web Frameworks experiment
        run: firebase experiments:enable webframeworks

      - name: Copy content to public (replace symlink)
        run: |
          rm -f public/content
          cp -r content public/content

      - name: Remove content submodule to avoid symlinks
        run: |
          # Backup contentlayer config
          cp contentlayer.config.ts contentlayer.config.ts.bak
          # Update contentlayer to use public/content instead of content
          sed 's/contentDirPath: .content./contentDirPath: "public\/content"/' contentlayer.config.ts > contentlayer.config.ts.tmp
          mv contentlayer.config.ts.tmp contentlayer.config.ts
          # Remove the content submodule directory to avoid symlinks
          rm -rf content

      - name: Build (Contentlayer + Next)
        run: npm run build

      - name: Restore contentlayer config
        run: |
          mv contentlayer.config.ts.bak contentlayer.config.ts

      - name: Clean up symlinks before deployment
        run: |
          # Remove any remaining symlinks that might cause issues
          find . -type l -not -path "./node_modules/*" -delete 2>/dev/null || true
          # Ensure clean Firebase cache
          rm -rf .firebase
          # Clean up any build artifacts that might contain symlinks
          rm -rf .next/cache 2>/dev/null || true

      - name: Debug frameworks output
        run: |
          echo "PROJECT=$FIREBASE_PROJECT_ID"
          ls -la .firebase || true
          ls -la .firebase/$FIREBASE_PROJECT_ID || true
          ls -la .firebase/$FIREBASE_PROJECT_ID/functions || true

      - name: Set cleanup policy (once)
        run: firebase functions:artifacts:setpolicy --location europe-west1 --days 7 --project "$FIREBASE_PROJECT_ID"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deploy to Firebase (Hosting + SSR auto)
        run: firebase deploy --project "$FIREBASE_PROJECT_ID" --non-interactive
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}