name: Deploy Development (dev.staituned.com)

# ===================================
# DEVELOPMENT DEPLOYMENT CONFIGURATION
# ===================================
# Branches: dev, development
# Domain: https://dev.staituned.com
# Environment: Development
# ===================================

on:
  # Triggered on pushes to dev or development branch
  push:
    branches: [ dev, development ]
  
  # Manual deployment trigger
  workflow_dispatch:
  
  # Repository dispatch for CMS updates on dev
  repository_dispatch:
    types: [dev-content-updated, development-content-updated]

env:
  DEPLOYMENT_DOMAIN: "dev.staituned.com"
  DEPLOYMENT_URL: "https://dev.staituned.com"
  ENVIRONMENT: "development"

# Ensure the workflow has necessary permissions
permissions:
  contents: write
  actions: read

jobs:
  deploy-development:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📋 Deployment Info
        run: |
          echo "🚀 DEVELOPMENT DEPLOYMENT"
          echo "========================="
          echo "🌐 Domain: ${{ env.DEPLOYMENT_DOMAIN }}"
          echo "🔗 URL: ${{ env.DEPLOYMENT_URL }}"
          echo "🧪 Environment: ${{ env.ENVIRONMENT }}"
          echo "🌿 Branch: ${{ github.ref_name }}"
          echo "📝 Commit: ${{ github.sha }}"
          echo "========================="
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.WEBSITE_DISPATCH_TOKEN }}
          fetch-depth: 0
      
      - name: Update CMS submodule (if triggered by CMS)
        if: github.event_name == 'repository_dispatch'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          echo "🔄 Updating CMS submodule to latest..."
          git submodule update --remote cms
          
          # Check if there are changes
          if ! git diff --quiet HEAD -- cms; then
            echo "📝 CMS submodule has updates"
            git add cms
            git commit -m "🔄 Auto-update content from CMS (dev)
            
            Triggered by: ${{ github.event.client_payload.pusher }}
            CMS commit: ${{ github.event.client_payload.sha }}
            "
            git push origin ${{ github.ref_name }}
            echo "✅ CMS submodule updated and committed"
          else
            echo "ℹ️ No changes in CMS submodule"
          fi
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build website (Development)
        run: |
          echo "🏗️ Building website for DEVELOPMENT environment..."
          export NODE_ENV=development
          export NEXT_PUBLIC_BASE_URL=${{ env.DEPLOYMENT_URL }}
          npm run build
          echo "✅ Development build successful"
      
      - name: Deploy to Vercel Development
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--alias ${{ env.DEPLOYMENT_DOMAIN }}'
          alias-domains: |
            ${{ env.DEPLOYMENT_DOMAIN }}
      
      - name: Development Deployment Summary
        run: |
          echo "🚀 DEVELOPMENT DEPLOYMENT COMPLETE"
          echo "==================================="
          echo "🌐 Live URL: ${{ env.DEPLOYMENT_URL }}"
          echo "🧪 Environment: ${{ env.ENVIRONMENT }}"
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "🔄 Trigger: CMS content update"
            echo "👤 CMS Pusher: ${{ github.event.client_payload.pusher }}"
            echo "📝 CMS Commit: ${{ github.event.client_payload.sha }}"
          else
            echo "🔄 Trigger: Direct push to ${{ github.ref_name }} branch"
          fi
          echo "📝 Website Commit: ${{ github.sha }}"
          echo "✅ Development website successfully deployed!"
